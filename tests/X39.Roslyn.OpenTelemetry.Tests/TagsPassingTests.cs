using Xunit;

namespace X39.Roslyn.OpenTelemetry.Tests;

public class TagsPassingTests : CompilationTestBaseClass
{
    private const string SingleStringTagCode = """
                                               using System.Diagnostics;
                                               using X39.Roslyn.OpenTelemetry.Attributes;
                                               namespace TestNamespace;

                                               public partial class SingleStringTag
                                               {
                                                   [Activity(ActivityKind.Internal)]
                                                   private static partial Activity? StartMyActivity(
                                                       string tag
                                                   );
                                               }
                                               """;

    private const string SingleStringTagExpected = """
                                             // <auto-generated/>
                                             #nullable enable
                                             using System.Diagnostics;
                                             using System.ComponentModel;
                                             using System.Collections.Generic;

                                             namespace TestNamespace;
                                             partial class SingleStringTag
                                             {
                                                 [EditorBrowsable(EditorBrowsableState.Never)]
                                                 private static ActivitySource MyActivitySource = new("My");
                                                 private static partial Activity? StartMyActivity(
                                                     string tag
                                                 )
                                                 {
                                                     return MyActivitySource.StartActivity(
                                                         "My",
                                                         ActivityKind.Internal,
                                                         parentContext: default,
                                                         tags: new[] {
                                                             new KeyValuePair<string, object?>("tag", tag),
                                                         }
                                                     );
                                                 }
                                             }

                                             """;
    private const string TripleStringTagCode = """
                                                using System.Diagnostics;
                                                using X39.Roslyn.OpenTelemetry.Attributes;
                                                namespace TestNamespace;

                                                public partial class TripleStringTag
                                                {
                                                    [Activity(ActivityKind.Internal)]
                                                    private static partial Activity? StartMyActivity(
                                                        string tag1,
                                                        string tag3,
                                                        string tag2
                                                    );
                                                }
                                                """;

    private const string TripleStringTagExpected = """
                                             // <auto-generated/>
                                             #nullable enable
                                             using System.Diagnostics;
                                             using System.ComponentModel;
                                             using System.Collections.Generic;

                                             namespace TestNamespace;
                                             partial class TripleStringTag
                                             {
                                                 [EditorBrowsable(EditorBrowsableState.Never)]
                                                 private static ActivitySource MyActivitySource = new("My");
                                                 private static partial Activity? StartMyActivity(
                                                     string tag1,
                                                     string tag3,
                                                     string tag2
                                                 )
                                                 {
                                                     return MyActivitySource.StartActivity(
                                                         "My",
                                                         ActivityKind.Internal,
                                                         parentContext: default,
                                                         tags: new[] {
                                                             new KeyValuePair<string, object?>("tag1", tag1),
                                                             new KeyValuePair<string, object?>("tag3", tag3),
                                                             new KeyValuePair<string, object?>("tag2", tag2),
                                                         }
                                                     );
                                                 }
                                             }

                                             """;


    [Theory]
    [InlineData("SingleStringTag", SingleStringTagCode, SingleStringTagExpected)]
    [InlineData("TripleStringTag", TripleStringTagCode, TripleStringTagExpected)]
    public void TestCodeIsAsExpected(string className, string code, string expected)
    {
        var generatedFiles = Compile(code, []);
        // Complex generators should be tested using text comparison.
        var (_, classOutput) = Assert.Single(
            generatedFiles,
            f => f.FilePath.EndsWith(string.Concat(className, ".", "My", ".g.cs"))
        );
        Assert.Equal(expected, classOutput, ignoreLineEndingDifferences: true);
    }
}